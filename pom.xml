<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~   HORTONWORKS DATAPLANE SERVICE AND ITS CONSTITUENT SERVICES
  ~
  ~   (c) 2016-2018 Hortonworks, Inc. All rights reserved.
  ~
  ~   This code is provided to you pursuant to your written agreement with Hortonworks, which may be the terms of the
  ~   Affero General Public License version 3 (AGPLv3), or pursuant to a written agreement with a third party authorized
  ~   to distribute this code.  If you do not have a written agreement with Hortonworks or with an authorized and
  ~   properly licensed third party, you do not have any rights to this code.
  ~
  ~   If this code is provided to you under the terms of the AGPLv3:
  ~   (A) HORTONWORKS PROVIDES THIS CODE TO YOU WITHOUT WARRANTIES OF ANY KIND;
  ~   (B) HORTONWORKS DISCLAIMS ANY AND ALL EXPRESS AND IMPLIED WARRANTIES WITH RESPECT TO THIS CODE, INCLUDING BUT NOT
  ~     LIMITED TO IMPLIED WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE;
  ~   (C) HORTONWORKS IS NOT LIABLE TO YOU, AND WILL NOT DEFEND, INDEMNIFY, OR HOLD YOU HARMLESS FOR ANY CLAIMS ARISING
  ~     FROM OR RELATED TO THE CODE; AND
  ~   (D) WITH RESPECT TO YOUR EXERCISE OF ANY RIGHTS GRANTED TO YOU FOR THE CODE, HORTONWORKS IS NOT LIABLE FOR ANY
  ~     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES INCLUDING, BUT NOT LIMITED TO,
  ~     DAMAGES RELATED TO LOST REVENUE, LOST PROFITS, LOSS OF INCOME, LOSS OF BUSINESS ADVANTAGE OR UNAVAILABILITY,
  ~     OR LOSS OR CORRUPTION OF DATA.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hortonworks.smm</groupId>
    <artifactId>smm-kafka</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>common</module>
        <module>kafka-admin-services</module>
        <module>kafka-admin-rest-service</module>
        <module>docker</module>
        <module>dist</module>
    </modules>

    <packaging>pom</packaging>

    <scm>
        <connection>scm:git:git@github.com:hortonworks/streams-messaging-manager</connection>
        <developerConnection>scm:git:git@github.com:hortonworks/streams-messaging-manager</developerConnection>
        <url>scm:git:git@github.com:hortonworks/streams-messaging-manager</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.1.0</junit.version>
        <mockito.version>1.10.19</mockito.version>

        <slf4j.version>1.7.12</slf4j.version>
        <kafka.version>1.0.0</kafka.version>
        <kafkaArtifact>kafka_2.11</kafkaArtifact>
        <jackson.version>2.9.5</jackson.version>
        <dropwizard.version>1.2.7</dropwizard.version>
        <jersey-media-multipart.version>2.22.1</jersey-media-multipart.version>
        <jersey-client.version>2.22.1</jersey-client.version>
        <jersey-media-json-jackson.version>2.22.1</jersey-media-json-jackson.version>
        <schema-registry.version>0.5.3</schema-registry.version>
        <ambari-metrics-common.version>2.6.1.0.0</ambari-metrics-common.version>
        <google-guice.version>4.2.0</google-guice.version>
        <javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <ranger-kafka-plugin.version>1.0.0</ranger-kafka-plugin.version>

        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-surefire.version>2.19.1</maven-surefire.version>
        <maven-surefire-provider.version>1.1.0</maven-surefire-provider.version>
        <maven-shade-plugin.version>2.4.1</maven-shade-plugin.version>
        <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
        <maven-src-plugin.version>2.2.1</maven-src-plugin.version>

        <wiremock-standalone.version>2.15.0</wiremock-standalone.version>
        <jacoco-plugin.version>0.8.0</jacoco-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-core</artifactId>
                <version>${dropwizard.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey-media-multipart.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>storage-core</artifactId>
                <version>${schema-registry.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>biz.paluch.redis</groupId>
                        <artifactId>lettuce</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>storage-tool</artifactId>
                <version>${schema-registry.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>schema-registry-client</artifactId>
                <version>${schema-registry.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${google-guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>schema-registry-serdes</artifactId>
                <version>${schema-registry.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--Test dependencies-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>schema-registry-serdes</artifactId>
                <version>${schema-registry.version}</version>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>schema-registry-core</artifactId>
                <version>${schema-registry.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>clojars</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>hortonworks.repo</id>
            <url>http://nexus-private.hortonworks.com/nexus/content/groups/public/</url>
            <name>Hortonworks Repo</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
	<profile>
	   <id>mpack</id>
	   <modules>
		<module>mpack</module>
	   </modules>
        </profile>
        <profile>
            <id>all</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>coverage</id>
            <properties>
                <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>
                <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
                <jacoco.percentage.instruction>0.60</jacoco.percentage.instruction>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-plugin.version}</version>
                        <executions>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when
                            Maven the Surefire plugin is executed. -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data -->
                                    <destFile>${jacoco.ut.execution.data.file}</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data -->
                                    <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                                    <!-- Sets the output directory for the code coverage report -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ut-coverage-rule</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.percentage.instruction}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when
                                Maven the Failsafe plugin is executed. -->
                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${jacoco.it.execution.data.file}</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${jacoco.it.execution.data.file}</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>it-coverage-rule</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${jacoco.it.execution.data.file}</dataFile>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.percentage.instruction}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>

                <!-- Test plugins -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${maven-surefire-provider.version}</version>
                        </dependency>
                    </dependencies>
                    <version>${maven-surefire.version}</version>
                    <configuration>
                        <!-- Sets the VM argument line used when unit tests are run. -->
                        <argLine>${surefireArgLine}</argLine>
                        <properties>
                            <testEnv>unit</testEnv>
                        </properties>
                        <includes>
                            <include>**/*.class</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                    <configuration>
                        <groups>com.hortonworks.smm.kafka.test.IntegrationTest</groups>
                    </configuration>
                    <executions>
                        <!-- Ensures that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the VM argument line used when integration tests are run. -->
                                <argLine>${failsafeArgLine}</argLine>
                                <properties>
                                    <testEnv>integration</testEnv>
                                </properties>
                                <includes>
                                    <include>**/*.class</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>false</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
